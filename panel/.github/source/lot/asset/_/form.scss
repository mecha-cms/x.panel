[role='button'],
[role='combobox'],
[role='listbox'],
[role='searchbox'],
[role='spinbutton'],
[role='textbox'],
button,
input,
output,
select,
textarea {
  accent-color: var(--fill-button);
  border: 1px solid transparent;
  display: inline-block;
  height: calc(var(--h) + (var(--y) / 2));
  padding: calc(var(--y) / 4) calc(var(--x) / 2);
  position: relative;
  text-align: left;
  vertical-align: middle;
  width: auto;
  z-index: 0;
  &:focus {
    @extend :focus-visible;
  }
}

[role='button'],
[role='button']:any-link,
button,
input[type='button'],
input[type='reset'],
input[type='submit'] {
  background: var(--fill-button);
  border-color: var(--stroke-button);
  border-radius: var(--arc-button);
  border-width: 0;
  box-shadow: var(--shadow-button);
  color: var(--color-button);
  text-align: center;
  @each $v in (hover, focus, active, disabled) {
    &:#{$v} {
      background: var(--fill-button--#{$v}, var(--fill-button));
      border-color: var(--stroke-button--#{$v}, var(--stroke-button));
      border-radius: var(--arc-button--#{$v}, var(--arc-button));
      box-shadow: var(--shadow-button--#{$v}, var(--shadow-button));
      color: var(--color-button--#{$v}, var(--color-button));
    }
  }
  &[role='link'] {
    background: none;
    border-color: transparent;
    border-radius: 0;
    box-shadow: none;
    color: var(--color-link);
    @each $v in (hover, focus, active) {
      &:#{$v} {
        background: none;
        border-color: transparent;
        border-radius: 0;
        box-shadow: none;
        color: var(--color-link--#{$v}, var(--color-link));
      }
    }
  }
  .title {
    > .icon {
      &:first-child {
        margin-left: calc(var(--x) / -4);
      }
      &:last-child {
        margin-right: calc(var(--x) / -4);
      }
      &.caret {
        margin-left: calc(var(--x) / -4);
        margin-right: calc(var(--x) / -4);
      }
    }
  }
}

[role='searchbox'],
[role='spinbutton'],
[role='textbox'],
input,
textarea {
  background: var(--fill-input);
  border-color: var(--stroke-input);
  border-radius: var(--arc-input);
  box-shadow: var(--shadow-input);
  color: var(--color-input);
  width: var(--width-input);
  @each $v in (read-write, hover, focus, active, read-only, disabled) {
    &:#{$v} {
      background: var(--fill-input--#{$v}, var(--fill-input));
      border-color: var(--stroke-input--#{$v}, var(--stroke-input));
      box-shadow: var(--shadow-input--#{$v}, var(--shadow-input));
      color: var(--color-input--#{$v}, var(--color-input));
    }
  }
  @each $v in (valid, invalid) {
    &[pattern],
    &[required] {
      &:focus:#{$v} {
        background: var(--fill-input--#{$v}, var(--fill-input));
        border-color: var(--stroke-input--#{$v}, var(--stroke-input));
        box-shadow: var(--shadow-input--#{$v}, var(--shadow-input));
        color: var(--color-input--#{$v}, var(--color-input));
      }
    }
  }
}

input {
  &[type='color'] {
    height: calc(var(--y) * 1.5);
    padding: 0;
    width: calc(var(--x) * 1.5);
  }
  &[type='file'] {
    line-height: normal;
  }
  &[type='image'] {
    box-shadow: none;
    height: auto;
    width: auto;
  }
}

[role='checkbox'],
[role='radio'],
input[type='checkbox'],
input[type='image'],
input[type='radio'] {
  background: none;
  border: 0;
  height: var(--z);
  line-height: var(--z);
  margin: 0;
  padding: 0;
  width: var(--z);
}

[role='slider'],
input[type='file'],
input[type='range'] {
  background: none;
  border: 0;
  box-shadow: none;
  // height: var(--y);
  line-height: var(--y);
  padding: 0;
}

output {
  background: var(--fill-output);
  border-color: var(--stroke-output);
  border-radius: var(--arc-output);
  box-shadow: var(--shadow-output);
  color: var(--color-output);
  @each $v in (hover, focus, active) {
    &:#{$v} {
      background: var(--fill-output--#{$v}, var(--fill-output));
      border-color: var(--stroke-output--#{$v}, var(--stroke-output));
      border-radius: var(--arc-output--#{$v}, var(--arc-output));
      box-shadow: var(--shadow-output--#{$v}, var(--shadow-output));
      color: var(--color-output--#{$v}, var(--color-output));
    }
  }
}

[role='combobox'],
[role='listbox'],
select {
  -moz-padding-start: calc((var(--x) / 2) - 3px); // <https://github.com/twbs/bootstrap/issues/32636>
  appearance: none;
  background: var(--fill-input);
  border-color: var(--stroke-input);
  border-radius: var(--arc-input);
  box-shadow: var(--shadow-input);
  color: var(--color-input);
  width: var(--width-input);
  @each $v in (hover, focus, active, disabled) {
    &:#{$v} {
      background: var(--fill-input--#{$v}, var(--fill-input));
      border-color: var(--stroke-input--#{$v}, var(--stroke-input));
      box-shadow: var(--shadow-input--#{$v}, var(--shadow-input));
      color: var(--color-input--#{$v}, var(--color-input));
    }
  }
  &[aria-multiselectable='true'],
  &[multiple] {
    height: auto;
    [role='group'],
    [role='option'],
    optgroup,
    option {
      background: none;
    }
  }
  [role='group'],
  [role='option'],
  optgroup,
  option {
    background: var(--fill-input);
    color: var(--color-input);
    margin: 0;
    padding: 0;
    @each $v in (disabled) {
      &:#{$v} {
        background: var(--fill-input--#{$v}, var(--fill-input));
        color: var(--color-input--#{$v}, var(--color-input));
      }
    }
  }
  [role='group'],
  optgroup {
    font-weight: bold;
    [role='option'],
    option {
      font-weight: normal;
      padding-left: calc(var(--x) / 3);
    }
  }
  &:not([multiple]):not([aria-multiselectable='true']) {
    padding-bottom: 0;
    padding-top: 0;
  }
}

[role='textbox'][aria-multiline='true'],
textarea {
  min-height: calc(var(--y) * 3.75);
  overflow: auto;
  resize: vertical;
  &.has\:height {
    height: calc(var(--y) * 10.75);
  }
}

label {
  [role='checkbox'],
  [role='radio'],
  input[type='checkbox'],
  input[type='radio'] {
    + span {
      display: inline-flex;
      vertical-align: middle;
    }
  }
}

// Custom appearance for modern browser(s)
[role='checkbox'],
[role='radio'],
input[type='checkbox'],
input[type='radio'] {
  @include appearance(none);
  background: var(--fill-button);
  border-color: var(--stroke-button);
  border-radius: var(--arc-button);
  box-shadow: var(--shadow-button);
  color: var(--color-button);
  &::before {
    background: var(--fill);
    bottom: 2px;
    content: "";
    left: 2px;
    position: absolute;
    right: 2px;
    top: 2px;
  }
  @each $v in (hover, focus, active, disabled) {
    &:#{$v} {
      background: var(--fill-button--#{$v}, var(--fill-button));
      border-color: var(--stroke-button--#{$v}, var(--stroke-button));
      box-shadow: var(--shadow-button--#{$v}, var(--shadow-button));
      color: var(--color-button--#{$v}, var(--color-button));
    }
  }
}

[aria-checked='true'][role='checkbox'],
input[type='checkbox']:checked {
  &::before {
    @include transform(rotate(45deg));
    background: none;
    border-bottom: 2px solid var(--color-button);
    border-right: 2px solid var(--color-button);
    bottom: 4px;
    left: 5px;
    right: 5px;
    top: 1px;
    visibility: visible;
  }
  @each $v in (hover, focus, active, disabled) {
    &:#{$v} {
      &::before {
        border-bottom-color: var(--color-button--#{$v});
        border-right-color: var(--color-button--#{$v});
      }
    }
  }
}

[role='radio'],
input[type='radio'] {
  &,
  &::before {
    border-radius: 100%;
  }
}

[aria-checked='true'][role='radio'],
input[type='radio']:checked {
  &::before {
    background: none;
    border: 2px solid;
    border-color: var(--fill);
    visibility: visible;
  }
  @each $v in (hover, focus, active, disabled) {
    &:#{$v} {
      &::before {
        border-color: var(--fill--#{$v}, var(--fill));
      }
    }
  }
}

input[type='checkbox'],
input[type='radio'] {
  &[role='switch'] {
    border-radius: calc((var(--z) * 1.25) / 2);
    border-width: 0;
    height: calc(var(--z) * 1.25);
    width: calc(var(--z) * 2);
    &::before {
      @include transform(rotate(0));
      background: var(--color-button);
      border-radius: calc(((var(--z) * 1.25) - 4px) / 2);
      border: 0;
      height: calc((var(--z) * 1.25) - 4px);
      left: 2px;
      top: 2px;
      visibility: visible;
      width: calc((var(--z) * 1.25) - 4px);
    }
    &:checked {
      &::before {
        left: calc(var(--z) - 2px);
      }
    }
  }
}

[role='slider'],
input[type='range'] {
  @include appearance(none);
  &::-webkit-slider-runnable-track {
    -webkit-appearance: none;
    background: var(--stroke-input);
    border: 0;
    height: 2px;
    overflow: visible;
  }
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    background: var(--fill-button);
    border-color: var(--stroke-button);
    border-radius: var(--arc-button);
    border-width: 0;
    box-shadow: var(--shadow-button);
    color: var(--color-button);
    height: var(--y);
    margin-top: calc(calc(var(--y) / -2) + 1px); // Magic! :(
    width: calc(var(--x) / 2);
  }
  &::-moz-range-track {
    background: var(--stroke-input);
    border: 0;
    height: 2px;
  }
  &::-moz-range-thumb {
    background: var(--fill-button);
    border-color: var(--stroke-button);
    border-radius: var(--arc-button);
    border-width: 0;
    box-shadow: var(--shadow-button);
    color: var(--color-button);
    height: var(--y);
    margin-top: calc(calc(var(--y) / -2) + 1px); // Magic! :(
    width: calc(var(--x) / 2);
  }
  @each $v in (hover, focus, active, disabled) {
    &:#{$v} {
      &::-webkit-slider-runnable-track {
        background: var(--stroke-input--#{$v}, var(--stroke-input));
      }
      &::-moz-range-track {
        background: var(--stroke-input--#{$v}, var(--stroke-input));
      }
      &::-webkit-slider-thumb {
        background: var(--fill-button--#{$v}, var(--fill-button));
        border-color: var(--stroke-button--#{$v}, var(--stroke-button));
        box-shadow: var(--shadow-button--#{$v}, var(--shadow-button));
        color: var(--color-button--#{$v}, var(--color-button));
      }
      &::-moz-range-thumb {
        background: var(--fill-button--#{$v}, var(--fill-button));
        border-color: var(--stroke-button--#{$v}, var(--stroke-button));
        box-shadow: var(--shadow-button--#{$v}, var(--shadow-button));
        color: var(--color-button--#{$v}, var(--color-button));
      }
    }
  }
}