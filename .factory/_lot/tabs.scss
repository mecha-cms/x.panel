@use '../_content/any' as *;

@mixin tabs {
  .lot-tabs {
    .lot-links {
      li {
        @include user-select(none);
        color: var(--color-tab, var(--color, inherit));
        a {
          color: inherit;
          display: flex;
          @each $v in (hover, focus, active) {
            &:#{$v} {
              color: var(--color-tab--#{$v}, var(--color-tab, var(--color, inherit)));
            }
          }
        }
        &.has-link {
          color: var(--color-tab-link, var(--color-tab, var(--color-link, var(--color, inherit))));
          > a {
            @each $v in (hover, focus, active) {
              &:#{$v} {
                color: var(--color-tab-link--#{$v}, var(--color-tab-link, var(--color-tab--#{$v}, var(--color-tab, var(--color-link--#{$v}, var(--color-link, var(--color, inherit)))))));
              }
            }
          }
        }
        &.is-current {
          color: var(--color-tab--current, var(--color-tab, var(--color, inherit)));
        }
        &.not-active {
          color: var(--color-tab--disabled, var(--color-tab, var(--color, inherit)));
          > a {
            @each $v in (hover, focus, active) {
              &:#{$v} {
                color: inherit;
              }
            }
          }
        }
      }
      .title {
        .icon {
          margin: 0 calc(var(--z) / -2);
          &:first-child {
            margin-right: calc(var(--z) / 4);
          }
          &:last-child {
            margin-left: calc(var(--z) / 4);
          }
          &:only-child {
            margin-left: calc(var(--z) / -2);
            margin-right: calc(var(--z) / -2);
          }
        }
      }
    }
    &.count-0 {
      display: none;
    }
    &.count-1 {
      .lot-links {
        display: none;
      }
    }
  }
}