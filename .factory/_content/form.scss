@use 'any' as *;

@mixin form {
  .button,
  .input,
  .output,
  .select,
  .textarea {
    accent-color: var(--fill-button, var(--fill, none));
    border: 1px solid transparent;
    display: inline-block;
    height: calc(var(--h) + (var(--y) / 2));
    line-height: calc(var(--h) - 2px);
    padding: calc(var(--y) / 4) calc(var(--x) / 2);
    position: relative;
    text-align: left;
    vertical-align: middle;
    width: auto;
    z-index: 0;
    &:focus {
      @extend :focus-visible;
    }
  }

  .button {
    background: var(--fill-button, var(--fill, none));
    border-color: var(--stroke-button, var(--stroke, transparent));
    border-radius: var(--arc-button, var(--arc, 0));
    box-shadow: var(--shadow-button, var(--shadow, none));
    color: var(--color-button, var(--color, inherit));
    text-align: center;
    width: auto;
    @each $v in (hover, focus, active, disabled) {
      &:#{$v} {
        background: var(--fill-button--#{$v}, var(--fill-button, var(--fill--#{$v}, var(--fill, none))));
        border-color: var(--stroke-button--#{$v}, var(--stroke-button, var(--stroke--#{$v}, var(--stroke, transparent))));
        border-radius: var(--arc-button--#{$v}, var(--arc-button, var(--arc--#{$v}, var(--arc, 0))));
        box-shadow: var(--shadow-button--#{$v}, var(--shadow-button, var(--shadow--#{$v}, var(--shadow, none))));
        color: var(--color-button--#{$v}, var(--color-button, var(--color--#{$v}, var(--color, inherit))));
      }
    }
    &[role='link'] {
      background: none;
      border-color: transparent;
      border-radius: 0;
      box-shadow: none;
      color: var(--color-link, var(--color, inherit));
      @each $v in (hover, focus, active) {
        &:#{$v} {
          background: none;
          border-color: transparent;
          border-radius: 0;
          box-shadow: none;
          color: var(--color-link--#{$v}, var(--color-link, var(--color--#{$v}, var(--color, inherit))));
        }
      }
    }
    &.not-active {
      @extend :disabled;
    }
    .title {
      margin: -1px;
      > .icon {
        &:first-child {
          margin-left: calc(var(--x) / -4);
        }
        &:last-child {
          margin-right: calc(var(--x) / -4);
        }
        &.caret {
          margin-left: calc(var(--x) / -4);
          margin-right: calc(var(--x) / -4);
        }
      }
    }
  }

  .input,
  .textarea {
    background: var(--fill-input, var(--fill, none));
    border-color: var(--stroke-input, var(--stroke, transparent));
    border-radius: var(--arc-input, var(--arc, 0));
    box-shadow: var(--shadow-input, var(--shadow, none));
    color: var(--color-input, var(--color, inherit));
    width: var(--width-input);
    @each $v in (read-write, hover, focus, active, read-only, disabled) {
      &:#{$v} {
        background: var(--fill-input--#{$v}, var(--fill-input, var(--fill--#{$v}, var(--fill, none))));
        border-color: var(--stroke-input--#{$v}, var(--stroke-input, var(--stroke--#{$v}, var(--stroke, transparent))));
        box-shadow: var(--shadow-input--#{$v}, var(--shadow-input, var(--shadow--#{$v}, var(--shadow, none))));
        color: var(--color-input--#{$v}, var(--color-input, var(--color--#{$v}, var(--color, inherit))));
      }
    }
    &[pattern],
    &[required] {
      @each $v in (valid, invalid) {
        &:focus:#{$v} {
          background: var(--fill-input--#{$v}, var(--fill-input--focus, var(--fill-input, var(--fill--#{$v}, var(--fill--focus, var(--fill, none))))));
          border-color: var(--stroke-input--#{$v}, var(--stroke-input--focus, var(--stroke-input, var(--stroke--#{$v}, var(--stroke--focus, var(--stroke, transparent))))));
          box-shadow: var(--shadow-input--#{$v}, var(--shadow-input--focus, var(--shadow-input, var(--shadow--#{$v}, var(--shadow--focus, var(--shadow, none))))));
          color: var(--color-input--#{$v}, var(--color-input--focus, var(--color-input, var(--color--#{$v}, var(--color--focus, var(--color, inherit))))));
        }
      }
    }
  }

  .input {
    @each $v in (in-range, out-of-range) {
      &:focus:#{$v} {
        background: var(--fill-input--#{$v}, var(--fill-input--focus, var(--fill-input, var(--fill--#{$v}, var(--fill--focus, var(--fill, none))))));
        border-color: var(--stroke-input--#{$v}, var(--stroke-input--focus, var(--stroke-input, var(--stroke--#{$v}, var(--stroke--focus, var(--stroke, transparent))))));
        box-shadow: var(--shadow-input--#{$v}, var(--shadow-input--focus, var(--shadow-input, var(--shadow--#{$v}, var(--shadow--focus, var(--shadow, none))))));
        color: var(--color-input--#{$v}, var(--color-input--focus, var(--color-input, var(--color--#{$v}, var(--color--focus, var(--color, inherit))))));
      }
    }
    &[type='color'] {
      height: calc(var(--y) * 1.5);
      padding: 0;
      width: calc(var(--x) * 1.5);
    }
    &[type='file'] {
      line-height: normal;
      width: auto;
    }
    &[type='image'] {
      box-shadow: none;
      height: auto;
      width: auto;
    }
  }

  .input[type='checkbox'],
  .input[type='image'],
  .input[type='radio'] {
    background: none;
    border: 0;
    height: var(--z);
    line-height: var(--z);
    margin: 0;
    padding: 0;
    width: var(--z);
  }

  .input[type='file'],
  .input[type='range'] {
    background: none;
    border: 0;
    box-shadow: none;
    // height: var(--y);
    line-height: var(--y);
    padding: 0;
  }

  .output {
    background: var(--fill-output, var(--fill, none));
    border-color: var(--stroke-output, var(--stroke, transparent));
    border-radius: var(--arc-output, var(--arc, 0));
    box-shadow: var(--shadow-output, var(--shadow, none));
    color: var(--color-output, var(--color, inherit));
    @each $v in (hover, focus, active) {
      &:#{$v} {
        background: var(--fill-output--#{$v}, var(--fill-output, var(--fill--#{$v}, var(--fill, none))));
        border-color: var(--stroke-output--#{$v}, var(--stroke-output, var(--stroke--#{$v}, var(--stroke, transparent))));
        border-radius: var(--arc-output--#{$v}, var(--arc-output, var(--arc--#{$v}, var(--arc, 0))));
        box-shadow: var(--shadow-output--#{$v}, var(--shadow-output, var(--shadow--#{$v}, var(--shadow, none))));
        color: var(--color-output--#{$v}, var(--color-output, var(--color--#{$v}, var(--color, inherit))));
      }
    }
  }

  .select {
    @include appearance(none);
    background: var(--fill-input, var(--fill, none));
    border-color: var(--stroke-input, var(--stroke, transparent));
    border-radius: var(--arc-input, var(--arc, 0));
    box-shadow: var(--shadow-input, var(--shadow, none));
    color: var(--color-input, var(--color, inherit));
    width: var(--width-input);
    @each $v in (hover, focus, active, disabled) {
      &:#{$v} {
        background: var(--fill-input--#{$v}, var(--fill-input, var(--fill--#{$v}, var(--fill, none))));
        border-color: var(--stroke-input--#{$v}, var(--stroke-input, var(--stroke--#{$v}, var(--stroke, transparent))));
        box-shadow: var(--shadow-input--#{$v}, var(--shadow-input, var(--shadow--#{$v}, var(--shadow, none))));
        color: var(--color-input--#{$v}, var(--color-input, var(--color--#{$v}, var(--color, inherit))));
      }
    }
    &[multiple] {
      height: auto;
      optgroup,
      option {
        background: none;
      }
    }
    optgroup,
    option {
      background: var(--fill-input, var(--fill, none));
      color: var(--color-input, var(--color, inherit));
      margin: 0;
      padding: 0;
      @each $v in (disabled) {
        &:#{$v} {
          background: var(--fill-input--#{$v}, var(--fill-input, var(--fill--#{$v}, var(--fill, none))));
          color: var(--color-input--#{$v}, var(--color-input, var(--color--#{$v}, var(--color, inherit))));
        }
      }
    }
    optgroup {
      font-weight: bolder;
      option {
        font-weight: normal;
        padding-left: calc(var(--x) / 3);
      }
    }
    &:not([multiple]) {
      padding: {
        bottom: 0;
        top: 0;
      }
    }
  }

  .textarea {
    min-height: calc(var(--y) * 3.75);
    overflow: auto;
    resize: vertical;
    &.has-height {
      height: calc(var(--y) * 10.75);
    }
    &.has-width {
      display: flex;
      width: 100%;
    }
  }

  label {
    .input {
      &[type='checkbox'],
      &[type='radio'] {
        + span {
          display: inline-flex;
          vertical-align: middle;
        }
      }
    }
  }

  // Custom appearance for modern browser(s)
  .input {
    &[type='checkbox'],
    &[type='radio'] {
      @include appearance(none);
      background: var(--fill-button, var(--fill, none));
      border-color: var(--stroke-button, var(--stroke, transparent));
      border-radius: var(--arc-button, var(--arc, 0));
      box-shadow: var(--shadow-button, var(--shadow, none));
      color: var(--color-button, var(--color, inherit));
      &::before {
        background: var(--fill, none);
        bottom: 2px;
        content: "";
        left: 2px;
        position: absolute;
        right: 2px;
        top: 2px;
      }
      @each $v in (hover, focus, active, disabled) {
        &:#{$v} {
          background: var(--fill-button--#{$v}, var(--fill-button, var(--fill--#{$v}, var(--fill, none))));
          border-color: var(--stroke-button--#{$v}, var(--stroke-button, var(--stroke--#{$v}, var(--stroke, transparent))));
          box-shadow: var(--shadow-button--#{$v}, var(--shadow-button, var(--shadow--#{$v}, var(--shadow, none))));
          color: var(--color-button--#{$v}, var(--color-button, var(--color--#{$v}, var(--color, inherit))));
        }
      }
    }
    &[type='checkbox']:checked {
      &::before {
        @include transform(rotate(45deg));
        background: none;
        border-bottom: 2px solid var(--color-button, var(--color, inherit));
        border-right: 2px solid var(--color-button, var(--color, inherit));
        bottom: 4px;
        left: 5px;
        right: 5px;
        top: 1px;
        visibility: visible;
      }
      @each $v in (hover, focus, active, disabled) {
        &:#{$v} {
          &::before {
            border-bottom-color: var(--color-button--#{$v}, var(--color--#{$v}, var(--color, inherit)));
            border-right-color: var(--color-button--#{$v}, var(--color--#{$v}, var(--color, inherit)));
          }
        }
      }
    }
    &[type='radio'] {
      &,
      &::before {
        border-radius: 100%;
      }
    }
    &[type='radio']:checked {
      &::before {
        background: none;
        border: 2px solid;
        border-color: var(--fill, none);
        visibility: visible;
      }
      @each $v in (hover, focus, active, disabled) {
        &:#{$v} {
          &::before {
            border-color: var(--fill--#{$v}, var(--fill, none));
          }
        }
      }
    }
    &[type='checkbox'],
    &[type='radio'] {
      &[role='switch'] {
        border-radius: calc((var(--z) * 1.25) / 2);
        border-width: 0;
        width: calc(var(--z) * 1.5);
        &::before {
          @include transform(rotate(0));
          background: var(--color-button, var(--color, inherit));
          border-radius: calc(((var(--z) * 1.25) - 4px) / 2);
          border: 0;
          height: calc(var(--z) - 4px);
          left: 2px;
          top: 2px;
          visibility: visible;
          width: calc(var(--z) - 4px);
        }
        &:checked {
          &::before {
            left: calc(var(--z) - 6px);
          }
        }
      }
    }
    &[type='range'] {
      @include appearance(none);
      @each $v in (in-range, out-of-range) {
        &:#{$v} {
          background: none;
          box-shadow: none;
        }
      }
      &::-webkit-slider-runnable-track {
        @include appearance(none);
        background: var(--stroke-input, var(--stroke, transparent));
        border: 0;
        height: 2px;
        overflow: visible;
      }
      &::-webkit-slider-thumb {
        @include appearance(none);
        background: var(--fill-button, var(--fill, none));
        border-color: var(--stroke-button, var(--stroke, transparent));
        border-radius: var(--arc-button, var(--arc, 0));
        border-width: 0;
        box-shadow: var(--shadow-button, var(--shadow, none));
        color: var(--color-button, var(--color, inherit));
        height: var(--y);
        margin-top: calc(calc(var(--y) / -2) + 1px); // Magic! :(
        width: calc(var(--x) / 2);
      }
      &::-moz-range-track {
        background: var(--stroke-input, var(--stroke, transparent));
        border: 0;
        height: 2px;
      }
      &::-moz-range-thumb {
        background: var(--fill-button, var(--fill, none));
        border-color: var(--stroke-button, var(--stroke, transparent));
        border-radius: var(--arc-button, var(--arc, 0));
        border-width: 0;
        box-shadow: var(--shadow-button, var(--shadow, none));
        color: var(--color-button, var(--color, inherit));
        height: var(--y);
        margin-top: calc(calc(var(--y) / -2) + 1px); // Magic! :(
        width: calc(var(--x) / 2);
      }
      @each $v in (hover, focus, active, disabled) {
        &:#{$v} {
          &::-webkit-slider-runnable-track {
            background: var(--stroke-input--#{$v}, var(--stroke-input, var(--stroke--#{$v}, var(--stroke, transparent))));
          }
          &::-moz-range-track {
            background: var(--stroke-input--#{$v}, var(--stroke-input, var(--stroke--#{$v}, var(--stroke, transparent))));
          }
          &::-webkit-slider-thumb {
            background: var(--fill-button--#{$v}, var(--fill-button, var(--fill--#{$v}, var(--fill, none))));
            border-color: var(--stroke-button--#{$v}, var(--stroke-button, var(--stroke--#{$v}, var(--stroke, transparent))));
            box-shadow: var(--shadow-button--#{$v}, var(--shadow-button, var(--shadow--#{$v}, var(--shadow, none))));
            color: var(--color-button--#{$v}, var(--color-button, var(--color--#{$v}, var(--color, inherit))));
          }
          &::-moz-range-thumb {
            background: var(--fill-button--#{$v}, var(--fill-button, var(--fill, none)));
            border-color: var(--stroke-button--#{$v}, var(--stroke-button, var(--stroke, transparent)));
            box-shadow: var(--shadow-button--#{$v}, var(--shadow-button, var(--shadow, none)));
            color: var(--color-button--#{$v}, var(--color-button, var(--color, inherit)));
          }
        }
      }
    }
  }
}