@mixin at-media {
  // Disable smooth scrolling when user(s) have `prefers-reduced-motion` enabled
  @media (prefers-reduced-motion: reduce) {
    :root {
      scroll-behavior: auto;
    }
  }
  @media (min-width: 720px) {
    .can-flex {
      display: flex;
      &.has-gap {
        gap: calc(var(--y) + (var(--h) - var(--z))) calc(var(--x) + (var(--h) - var(--z)));
      }
      > * {
        flex: 1;
        margin: 0;
        min-width: 0; // <https://stackoverflow.com/a/66689926/1163000>
      }
    }
    .lot-fields {
      &.can-flex {
        &.has-gap {
          gap: var(--y) var(--x);
        }
      }
    }
    .lot-tabs {
      .lot-links {
        border: 0 solid;
        border-color: var(--stroke-tab--current, var(--stroke-tab, var(--stroke--current, var(--stroke, transparent))));
        border-width: 0 0 1px;
        line-height: calc(var(--y) * 2);
        li {
          background: var(--fill-tab, var(--fill, none));
          border-radius: var(--arc-tab, var(--arc, 0));
          border-bottom-left-radius: 0;
          border-bottom-right-radius: 0;
          border: 1px solid;
          border-color: var(--stroke-tab, var(--stroke, transparent));
          border-bottom-width: 0;
          box-shadow: var(--shadow-tab, var(--shadow, none));
          + li {
            margin-left: -1px;
          }
          &.has-link {
            background: var(--fill-tab-link, var(--fill-tab, var(--fill-link, var(--fill, none))));
            border-color: var(--stroke-tab-link, var(--stroke-tab, var(--stroke-link, var(--stroke, transparent))));
            box-shadow: var(--shadow-tab-link, var(--shadow-tab, var(--shadow-link, var(--shadow, none))));
            @each $v in (hover, focus, active) {
              &:#{$v} {
                background: var(--fill-tab-link--#{$v}, var(--fill-tab-link, var(--fill-tab, var(--fill-link--#{$v}, var(--fill-link, var(--fill--#{$v}, var(--fill, none)))))));
                border-color: var(--stroke-tab-link--#{$v}, var(--stroke-tab-link, var(--stroke-tab, var(--stroke-link--#{$v}, var(--stroke-link, var(--stroke--#{$v}, var(--stroke, transparent)))))));
                box-shadow: var(--shadow-tab-link--#{$v}, var(--shadow-tab-link, var(--shadow-tab, var(--shadow-link--#{$v}, var(--shadow-link, var(--shadow--#{$v}, var(--shadow, none)))))));
              }
            }
          }
          &.is-current {
            background: var(--fill-tab--current, var(--fill-tab, var(--fill--current, var(--fill, none))));
            border-color: var(--stroke-tab--current, var(--stroke-tab, var(--stroke--current, var(--stroke, transparent))));
            box-shadow: var(--shadow-tab--current, var(--shadow-tab, var(--shadow--current, var(--shadow, none))));
            z-index: 1;
            &::after {
              border: 0 solid;
              border-color: var(--fill-tab--current, var(--fill-tab, var(--fill--current, var(--fill, none))));
              border-width: 0 0 1px;
              bottom: -1px;
              content: "";
              left: 0;
              position: absolute;
              right: 0;
              top: auto;
            }
          }
          &.not-active {
            background: var(--fill-tab--disabled, var(--fill-tab, var(--fill--disabled, var(--fill, none))));
            border-color: var(--stroke-tab--disabled, var(--stroke-tab, var(--stroke--disabled, var(--stroke, transparent))));
          }
        }
        a {
          padding: 0 calc(var(--z) * 1.25);
        }
      }
      &.has-gap {
        .content-tab,
        .lot-tab {
          background: var(--fill-tab, var(--fill, none));
          border: 1px solid;
          border-color: var(--stroke-tab, var(--stroke, transparent));
          border-top-width: 0;
          padding: var(--y) var(--x);
          &.is-current {
            background: var(--fill-tab--current, var(--fill-tab, var(--fill--current, var(--fill, none))));
            border-color: var(--stroke-tab--current, var(--stroke-tab, var(--stroke--current, var(--stroke, transparent))));
          }
        }
        &:not(.count-1) {
          .content-tab,
          .lot-tab {
            margin-top: 0;
          }
        }
      }
      &:not(.count-1) {
        .content-tab,
        .lot-tab {
          margin-top: var(--y);
        }
      }
      &:not(.has-current) {
        .lot-links {
          border-color: var(--stroke-tab, var(--stroke, transparent));
        }
      }
    }
  }
  @media (max-width: 720px) {
    .lot-bar {
      .lot-links {
        &.of-lot {
          flex: 1;
          min-width: 100%;
          width: 100%;
        }
      }
      .has-form {
        flex: 1;
        .lot-field {
          .with-fields {
            display: flex;
            input {
              flex: 1;
            }
          }
        }
      }
      .has-menu {
        ul {
          ul {
            left: 25%;
          }
        }
      }
    }
    .lot-desk,
    .lot-section {
      padding: calc(var(--y) / 2) calc(var(--x) / 2);
    }
    .lot-field {
      flex-direction: column;
      width: auto;
      > * {
        + * {
          margin-top: calc(var(--y) / 3);
        }
      }
      > label {
        padding: 0;
        text-align: inherit;
        width: auto;
        + div {
          padding: 0;
          text-align: inherit;
          width: auto;
        }
      }
    }
    .lot-page {
      > div:first-child {
        + div {
          + div {
            flex-basis: 100%;
            margin: 0 0 0 calc(var(--x) * 2.75);
            min-height: 0;
          }
        }
        &[hidden] {
          + div {
            + div {
              margin-left: 0;
            }
          }
        }
      }
    }
    .lot-pager {
      > span {
        &:first-child,
        &:last-child {
          display: none;
        }
      }
    }
    .lot-tabs {
      .lot-links {
        ul {
          gap: 0 var(--x);
          margin-bottom: var(--y);
        }
        li {
          color: var(--color--disabled, var(--color, inherit));
          &.is-current {
            color: var(--color--current, var(--color, inherit));
          }
          [role='link'],
          a:any-link {
            color: inherit;
          }
        }
        .title {
          svg {
            display: none;
          }
        }
      }
    }
  }
  @media (max-width: 340px) {
    .lot-page {
      > div:first-child {
        display: none;
        + div {
          + div {
            margin-left: 0;
          }
        }
      }
    }
  }
}